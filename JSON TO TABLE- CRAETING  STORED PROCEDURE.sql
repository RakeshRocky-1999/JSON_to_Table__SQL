------------------JSON TO TABLE: BRIDGING UNSTRUCTURED AND STRUCTURED DATA----------------

--CREATING STORED PROCEDURE FOR READING JSON DATA AND EXTRCTING INTO TABULAR FORMAT
CREATE PROCEDURE [dbo].[SP_PC_REFERRALS] (@JSON NVARCHAR(MAX))
AS
BEGIN
SET NOCOUNT ON
BEGIN TRY
BEGIN TRAN
DROP TABLE IF EXISTS #T_PC_REFERRALS
CREATE TABLE #T_PC_REFERRALS
(
ID NVARCHAR(MAX)  ,
ENGAGEMENTID NVARCHAR(MAX) ,
CREATEDDATETIME NVARCHAR(MAX),
UPDATEDDATETIME NVARCHAR(MAX) ,
EXPIRATIONDATETIME NVARCHAR(MAX)  ,
STATUS NVARCHAR(MAX)  ,
SUBSTATUS NVARCHAR(MAX)  ,
STATUSREASON NVARCHAR(MAX) ,
MPNID NVARCHAR(MAX)  ,
ACCEPTEDDATETIME NVARCHAR(MAX)  ,
ORGANIZATION_NAME NVARCHAR(MAX)  ,
ADDRESSLINE1 NVARCHAR(MAX)  ,
ADDRESSLINE2 NVARCHAR(MAX) ,
CITY NVARCHAR(MAX)  ,
[STATE] NVARCHAR(MAX) ,
COUNTRY NVARCHAR(MAX)  ,
POSTALCODE NVARCHAR(MAX)  ,
DEALVALUE NVARCHAR(MAX)  ,
CURRENCY NVARCHAR(MAX)  ,
FIRSTNAME NVARCHAR(MAX)  ,
LASTNAME NVARCHAR(MAX)  ,
MOBILENUMBER NVARCHAR(MAX)  ,
EMAIL NVARCHAR(MAX)  
)

INSERT INTO #T_PC_REFERRALS (
ID
,ENGAGEMENTID
,CREATEDDATETIME
,UPDATEDDATETIME
,EXPIRATIONDATETIME
,STATUS
,SUBSTATUS
,STATUSREASON
,MPNID
,ACCEPTEDDATETIME
,ORGANIZATION_NAME
,ADDRESSLINE1
,ADDRESSLINE2
,CITY
,STATE
,COUNTRY
,POSTALCODE
,DEALVALUE
,CURRENCY
,FIRSTNAME
,LASTNAME
,MOBILENUMBER
,EMAIL

) SELECT 
ID
,ENGAGEMENTID
,CREATEDDATETIME
,UPDATEDDATETIME
,EXPIRATIONDATETIME
,STATUS
,SUBSTATUS
,STATUSREASON
,MPNID
,ACCEPTEDDATETIME
,ORGANIZATION_NAME
,ADDRESSLINE1
,ADDRESSLINE2
,CITY
,STATE
,COUNTRY
,POSTALCODE
,DEALVALUE
,CURRENCY
,FIRSTNAME
,LASTNAME
,MOBILENUMBER
,EMAIL
FROM OPENJSON (@JSON)
WITH
(
 ID							NVARCHAR(MAX) '$.id'
,ENGAGEMENTID				NVARCHAR(MAX) '$.engagementId'
,CREATEDDATETIME			NVARCHAR(MAX) '$.createdDateTime'
,UPDATEDDATETIME			NVARCHAR(MAX) '$.updatedDateTime'
,EXPIRATIONDATETIME			NVARCHAR(MAX) '$.expirationDateTime'
,STATUS						NVARCHAR(MAX) '$.status'
,SUBSTATUS					NVARCHAR(MAX) '$.substatus'
,STATUSREASON				NVARCHAR(MAX) '$.statusReason'
,MPNID						NVARCHAR(MAX) '$.mpnId'
,ACCEPTEDDATETIME			NVARCHAR(MAX) '$.acceptedDateTime'
,ORGANIZATION_NAME			NVARCHAR(MAX) '$.customerProfile.name'
,ADDRESSLINE1				NVARCHAR(MAX) '$.customerProfile.address.addressLine1'
,ADDRESSLINE2				NVARCHAR(MAX) '$.customerProfile.address.addressLine2'
,CITY						NVARCHAR(MAX) '$.customerProfile.address.city'
,STATE						NVARCHAR(MAX) '$.customerProfile.address.state'
,COUNTRY					NVARCHAR(MAX) '$.customerProfile.address.country'
,POSTALCODE					NVARCHAR(MAX) '$.customerProfile.address.postalCode'
,DEALVALUE					NVARCHAR(MAX) '$.details.dealValue'
,CURRENCY					NVARCHAR(MAX) '$.details.currency'
,FIRSTNAME					NVARCHAR(MAX) '$.team.firstName'
,LASTNAME					NVARCHAR(MAX) '$.team.lastName'
,MOBILENUMBER				NVARCHAR(MAX) '$.team.phoneNumber'
,EMAIL						NVARCHAR(MAX) '$.team.email'
)

UPDATE #T_PC_REFERRALS SET EXPIRATIONDATETIME = CASE WHEN EXPIRATIONDATETIME IS NULL THEN 
DATEADD(DAY,14,CAST(CREATEDDATETIME AS DATETIME2))
ELSE EXPIRATIONDATETIME END


UPDATE T SET T.COUNTRY=S.NAME FROM #T_PC_REFERRALS  AS T JOIN [AdventureWorks2022].PERSON.COUNTRYREGION AS S ON
T.COUNTRY=S.COUNTRYREGIONCODE

UPDATE T SET T.STATE=SP.NAME
FROM
#T_PC_REFERRALS AS T JOIN [AdventureWorks2022].PERSON.COUNTRYREGION AS C ON T.COUNTRY=C.NAME
JOIN [AdventureWorks2022].[PERSON].[ADDRESS] AS AD ON AD.CITY=T.CITY
JOIN [AdventureWorks2022].[PERSON].[STATEPROVINCE] AS SP ON AD.STATEPROVINCEID=SP.STATEPROVINCEID



MERGE T_PC_REFERRALS AS TARGET
USING #T_PC_REFERRALS AS SOURCE
ON TARGET.ID=SOURCE.ID

when not matched by target then 
insert (
ID
,ENGAGEMENTID
,CREATEDDATETIME
,UPDATEDDATETIME
,EXPIRATIONDATETIME
,STATUS
,SUBSTATUS
,STATUSREASON
,MPNID
,ACCEPTEDDATETIME
,ORGANIZATION_NAME
,ADDRESSLINE1
,ADDRESSLINE2
,CITY
,STATE
,COUNTRY
,POSTALCODE
,DEALVALUE
,CURRENCY
,FIRSTNAME
,LASTNAME
,MOBILENUMBER
,EMAIL
)
values
(
source.ID
,source.ENGAGEMENTID
,source.CREATEDDATETIME
,source.UPDATEDDATETIME
,source.EXPIRATIONDATETIME
,source.STATUS
,source.SUBSTATUS
,source.STATUSREASON
,source.MPNID
,source.ACCEPTEDDATETIME
,source.ORGANIZATION_NAME
,source.ADDRESSLINE1
,source.ADDRESSLINE2
,source.CITY
,source.STATE
,source.COUNTRY
,source.POSTALCODE
,source.DEALVALUE
,source.CURRENCY
,source.FIRSTNAME
,source.LASTNAME
,source.MOBILENUMBER
,source.EMAIL
);


MERGE T_PC_REFERRALS AS TARGET
USING #T_PC_REFERRALS AS SOURCE
ON TARGET.ID=SOURCE.ID

WHEN MATCHED THEN UPDATE SET TARGET.MOBILENUMBER=SOURCE.MOBILENUMBER,TARGET.DEALVALUE=SOURCE.DEALVALUE,
TARGET.CURRENCY=SOURCE.CURRENCY,TARGET.STATUS=SOURCE.STATUS,TARGET.SUBSTATUS=SOURCE.SUBSTATUS;


UPDATE T_PC_REFERRALS SET ORG_DOMAIN= SUBSTRING(EMAIL,CHARINDEX('@',EMAIL)+1,
CHARINDEX('.',EMAIL,CHARINDEX('@',EMAIL))-1-CHARINDEX('@',EMAIL))


COMMIT TRAN
END TRY

BEGIN CATCH
ROLLBACK TRANSACTION;
THROW;
END CATCH

SET NOCOUNT OFF
END